{% set version = "2.5.1" %}

package:
  name: starlite-split
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/s/starlite/starlite-{{ version }}.tar.gz
  # the SHA256 gets updated by the bot
  sha256: 6307278ba4f796542b0cdbfeac82a5e71233da20cb7f744d16c8c7723da3a1cd

build:
  # the build number gets reset by the bot
  number: 0
  noarch: python

requirements:
  host:
    - python >=3.8
  run:
    - python >=3.8

outputs:
  - name: litestar
    build:
      noarch: python
      script:
        - {{ PYTHON }} {{ RECIPE_DIR }}/update_recipe.py --check
        - {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
      entry_points:
        - litestar = litestar.__main__:run_cli
    requirements:
      host:
        - pip
        - hatchling
        - python >=3.8
        # for `update_recipe.py` preflight
        - jinja2
        - tomli
      run:
        - python >=3.8
        - anyio >=3
        - click
        - httpx >=0.22
        - importlib-metadata
        - importlib-resources >=5.12.0
        - msgspec >=0.18.2
        - multidict >=6.0.2
        - polyfactory >=2.6.3
        - pyyaml
        - rich >=13.0.0
        - rich-click
        - typing_extensions
    test:
      imports:
        - litestar
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework
      license: MIT
      license_file: LICENSE

  - name: starlite-with-annotated-types
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - annotated-types
    test:
      imports:
        - starlite
        # TODO: import test for annotated-types
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with annotated-types)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-attrs
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - attrs
    test:
      imports:
        - starlite
        # TODO: import test for attrs
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with attrs)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-brotli
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - brotli
    test:
      imports:
        - starlite
        # TODO: import test for brotli
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with brotli)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-cli
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - jsbeautifier
        - uvicorn-standard
        - uvloop >=0.18.0
    test:
      imports:
        - starlite
        - litestar.cli.main
      commands:
        - pip check
        - litestar --help
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with cli)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-cryptography
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - cryptography
    test:
      imports:
        - starlite
        - litestar.middleware.session.cookie_backend
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with cryptography)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-jinja
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - jinja2 >=3.1.2
    test:
      imports:
        - starlite
        - litestar.contrib.jinja
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with jinja)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-jwt
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - cryptography
        - python-jose
    test:
      imports:
        - starlite
        - litestar.contrib.jwt.jwt_token
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with jwt)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-mako
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - mako >=1.2.4
    test:
      imports:
        - starlite
        - litestar.contrib.mako
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with mako)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-minijinja
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - minijinja >=1.0.0
    test:
      imports:
        - starlite
        # TODO: import test for minijinja
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with minijinja)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-opentelemetry
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - opentelemetry-instrumentation-asgi
    test:
      imports:
        - starlite
        - litestar.contrib.opentelemetry.utils
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with opentelemetry)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-piccolo
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - piccolo
    test:
      imports:
        - starlite
        # TODO: import test for piccolo
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with piccolo)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-picologging
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - picologging
    test:
      imports:
        - starlite
        - litestar.logging.picologging
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with picologging)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-prometheus
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - prometheus-client
    test:
      imports:
        - starlite
        # TODO: import test for prometheus
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with prometheus)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-pydantic
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - email-validator
        - pydantic
        - pydantic-extra-types
    test:
      imports:
        - starlite
        # TODO: import test for pydantic
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with pydantic)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-redis
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - hi-redis >=4.4.4
    test:
      imports:
        - starlite
        - litestar.cache.redis_cache_backend
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with redis)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-sqlalchemy
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - advanced-alchemy <1.0.0,>=0.2.2
    test:
      imports:
        - starlite
        # TODO: import test for sqlalchemy
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with sqlalchemy)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-standard
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - fast-query-parsers >=1.0.2
        - jinja2
        - jsbeautifier
        - uvicorn-standard
        - uvloop >=0.18.0
    test:
      imports:
        - starlite
        # TODO: import test for standard
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with standard)
      license: MIT
      license_file: LICENSE

  - name: starlite-with-structlog
    build:
      noarch: python
    requirements:
      host:
        - pip
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - structlog
    test:
      imports:
        - starlite
        # TODO: import test for structlog
      commands:
        - pip check
      requires:
        - pip
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with structlog)
      license: MIT
      license_file: LICENSE

  - name: litestar-with-full
    build:
      noarch: python
    requirements:
      host:
        - python >=3.8
      run:
        - python >=3.8
        - {{ pin_subpackage("starlite", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-annotated-types", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-attrs", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-brotli", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-cli", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-cryptography", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-jinja", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-jwt", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-mako", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-minijinja", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-opentelemetry", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-piccolo", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-picologging", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-prometheus", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-pydantic", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-redis", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-sqlalchemy", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-standard", max_pin="x.x.x") }}
        - {{ pin_subpackage("starlite-with-structlog", max_pin="x.x.x") }}
    test:
      requires:
        - pip
      imports:
        - starlite
      commands:
        - pip check
    about:
      home: https://litestar.dev
      dev_url: https://github.com/litestar-org/litestar
      doc_url: https://docs.litestar.dev
      summary: Light-weight and flexible ASGI API Framework (with all extras)
      license: MIT
      license_file: LICENSE

about:
  home: https://litestar.dev
  dev_url: https://github.com/litestar-org/litestar
  doc_url: https://docs.litestar.dev
  summary: Light-weight and flexible ASGI API Framework
  license: MIT
  license_file: LICENSE

extra:
  feedstock-name: starlite
  recipe-maintainers:
    - thewchan
    - bollwyvl
